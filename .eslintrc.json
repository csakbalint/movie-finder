{
  "parser": "@typescript-eslint/parser",
  "extends": "next/core-web-vitals",
  "plugins": ["prettier", "@typescript-eslint", "simple-import-sort"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "extends": ["eslint:recommended", "next/core-web-vitals", "prettier"],
      "settings": {
        "import/resolver": {
          "node": {
            "moduleDirectory": ["node_modules", "src/"]
          },
          "typescript": {
            "alwaysTryTypes": true
          }
        }
      },
      "rules": {
        "prettier/prettier": ["error"],
        "simple-import-sort/exports": "error",
        "simple-import-sort/imports": [
          "warn",
          {
            "groups": [
              // Node.js builtins. You could also generate this regex if you use a `.js` config.
              // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
              // external packages. own external libraries last
              [
                "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
              ],
              // Next related imports
              ["^(next)", "^(@mui)"],
              // Other external modules
              ["^[a-zA-Z]*"],
              // Internal packages.
              ["^(@fusion)", "^(@/)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\./?$", "^\\.\\.(?!/?$)"],
              // Other relative imports.
              ["^\\./(?=.*/)(?!/?$)"],
              // Put same-folder imports and `.` last.
              ["^\\.(?!/?$)", "^\\./?$"]
            ]
          }
        ],
        "sort-imports": "off",
        "import/order": "off",
        "react/jsx-no-useless-fragment": "error",
        "react/self-closing-comp": "error",
        "prefer-template": "error",
        "require-await": "off",
        "no-unused-vars": "off",
        "@typescript-eslint/require-await": "error",
        "react/jsx-curly-brace-presence": "error",
        "react/no-unused-prop-types": "error",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/iframe-missing-sandbox": "error",
        "react/jsx-boolean-value": "error"
      }
    }
  ]
}
